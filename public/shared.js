const MAX=5,SIZE=7,HEIGHT=732,WIDTH=412,CELL=412/7,randomNumber=(e,r)=>Math.floor(Math.random()*(r-e+1))+e,guid=()=>{const e=()=>Math.floor(65536*(1+Math.random())).toString(16).substring(1);return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},setOrder=(e=[])=>{const r=randomNumber(0,1),t=randomNumber(0,1);return e[0][2]=r?"r":"b",e[1][2]=r?"b":"r",{users:e,turn:e[t][1]}},isValidIndex=(e,r)=>e>=0&&e<7&&r>=0&&r<7,elementOnBoard=(e=[],r=0)=>{const t=[];for(let n=0;n<7;n++)for(let o=0;o<7;o++)e[n][o].v===r&&t.push({type:r,i:n,c:o});return t},isValidBoard=(e=[])=>{const r=elementOnBoard(e,6),t=elementOnBoard(e,7),n=elementOnBoard(e,8),o=elementOnBoard(e,9),l=(()=>{const r=[];for(let t=0;t<7;t++)for(let n=0;n<7;n++){const o=e[t][n].v,l=[[t-1,n,[t-2,n],[[t-2,n-1],[t-3,n],[t-2,n+1]]],[t,n-1,[t,n-2],[[t,n-3],[t-1,n-2],[t+1,n-2]]],[t+1,n,[t+2,n],[[t+3,n],[t+2,n-1],[t+2,n+1]]],[t,n+1,[t,n+2],[[t,n+3],[t-1,n+2],[t+1,n+2]]],[t-2,n,[t-1,n],[[t-1,n-1],[t-1,n+1]]],[t+2,n,[t+1,n],[[t+1,n-1],[t+1,n+1]]],[t,n+2,[t,n+1],[[t-1,n+1],[t+1,n+1]]],[t,n-2,[t,n-1],[[t-1,n-1],[t+1,n-1]]]].filter((e=>isValidIndex(e[2][0],e[2][1]))).filter((r=>e?.[r[0]]?.[r[1]]?.v===o)).map((r=>[r[0],r[1],r[2],r[3].filter((r=>e?.[r[0]]?.[r[1]]?.v===o))])).filter((e=>0!==e[3].length));0!==l.length&&r.push(l)}return r})(),a=(()=>{const r=[];for(let t=0;t<7;t++)for(let n=0;n<7;n++){const o=e[t][n].v,l=[[[[t-1,n],[t,n-1]],[t-1,n-1],[[[t-2,n-1],[t-1,n-2]]]],[[[t+1,n],[t,n-1]],[t+1,n-1],[[t+2,n-1],[t+1,n-2]]],[[[t+1,n],[t,n+1]],[t+1,n+1],[[t+2,n+1],[t+1,n+2]]],[[[t-1,n],[t,n+1]],[t-1,n+1],[[t-2,n+1],[t-1,n+2]]]].filter((e=>isValidIndex(e[1][0],e[1][1]))).filter((r=>e?.[r[0][0][0]]?.[r[0][0][1]]?.v===o&&e?.[r[0][1][0]]?.[r[0][1][1]]?.v===o)).map((r=>[r[0],r[1],r[2].filter((r=>e?.[r[0]]?.[r[1]]?.v===o))])).filter((e=>0!==e[2].length));0!==l.length&&r.push(l)}return r})();return{isValid:0!==[r,t,n,o,l,a].filter((e=>0!==e.length)).length,values:{axe:t,bomb:o,four:a,dynamite:r,rocket:n,three:l}}},generateBoard=(e=[])=>{const r=[],t=(e,t,n)=>[r?.[e-2]?.[t]?.v,r?.[e-1]?.[t]?.v].every((e=>e===n))||[r?.[e]?.[t-2]?.v,r?.[e]?.[t-1]?.v].every((e=>e===n)),n=(e,t,n)=>0!==[[r?.[e-1]?.[t]?.v,r?.[e-1]?.[t+1]?.v,r?.[e]?.[t+1]?.v],[r?.[e+1]?.[t]?.v,r?.[e+1]?.[t+1]?.v,r?.[e]?.[t+1]?.v],[r?.[e-1]?.[t]?.v,r?.[e-1]?.[t+1]?.v,r?.[e]?.[t+1]?.v],[r?.[e-1]?.[t]?.v,r?.[e-1]?.[t-1]?.v,r?.[e]?.[t-1]?.v]].map((e=>e.every((e=>e===n)))).filter((e=>e)).length;for(let o=0;o<7;o++){r[o]=[];for(let l=0;l<7;l++){let a=randomNumber(1,5);for(;;){if(!(t(o,l,a)||n(o,l,a)||e.includes(a)))break;a=randomNumber(1,5)}r[o][l]={v:a,i:7*o+l,l:Math.round(CELL*l),t:Math.round(CELL*o),p:{i:o,c:l}}}}return r},newBoard=(e=[])=>{let r=generateBoard(e);for(;;){if(isValidBoard(r).isValid)break;r=generateBoard(e)}return r};